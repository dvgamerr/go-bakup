name: BuildMatrix

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  bakup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    env:
      IMAGE_OWNER: dvgamerr
      IMAGE_NAME: bakup
      PLATFORMS: linux/amd64,linux/arm64/v8
      IMAGE_FILE: Dockerfile

      BASE_URL: https://notice.touno.io
    steps:
      - name: Checkout üõé
        uses: actions/checkout@master

      - name: Setup node env üèó
        uses: actions/setup-node@v3.5.0

      - name: Prepare üî∞
        id: prepare
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=v$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          # Use Docker `test` tag convention
          [ "${{github.event_name}}" == "pull_request" ] && VERSION=test
          echo ::set-output name=docker_image::$IMAGE_OWNER/$IMAGE_NAME
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform $PLATFORMS \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VERSION=$VERSION \
            --tag $IMAGE_OWNER/$IMAGE_NAME:$VERSION --file $IMAGE_FILE .
      - name: Set up Docker Buildx üìê
        uses: docker/setup-buildx-action@v2

      - name: Docker Buildx ‚öôÔ∏è
        run: docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}

      - name: Login to DockerHub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Push üìå
        if: success() && github.event_name != 'pull_request'
        run: docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
